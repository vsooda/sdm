#ifndef MODELCFG_H_
#define MODELCFG_H_

#define LandmarkPointsNum  74

static char trainFilePath[] = "ibug_300W_large_face_landmark_dataset/";    //   F:/BaiduYunDownload/ibug_300W_large_face_landmark_dataset/

static float mean_norm_shape[] = {0.062293 , 0.293938 ,0.0685095 , 0.447064 ,0.0960682 , 0.597251 , 0.141647 , 0.739029 , 0.210414 , 0.84792 , 0.29712 , 0.936709 , 0.39796 , 1.01116 , 0.519777 , 1.0368 , 0.640133 , 1.00905 , 0.742921 , 0.932266 , 0.830531 , 0.841249 , 0.8977 , 0.729938 , 0.941908 , 0.583556 , 0.967239 , 0.435477 , 0.971562 , 0.286015 , 0.906574 , 0.18302 , 0.825071 , 0.111362 , 0.701055 , 0.121004 , 0.62113 , 0.170601 , 0.707979 , 0.173572 , 0.823736 , 0.164321 , 0.125535 , 0.18461 , 0.205292 , 0.112219 , 0.331259 , 0.121103 , 0.409563 , 0.170922 , 0.323584 , 0.17297 , 0.207904 , 0.165308 , 0.220174 , 0.290094 , 0.302208 , 0.256967 , 0.391505 , 0.311674 , 0.297338 , 0.324002 , 0.812828 , 0.289762 , 0.733429 , 0.25599 , 0.641043 , 0.311193 , 0.738287 , 0.323397 , 0.449104 , 0.307929 , 0.437929 , 0.433343 , 0.380026 , 0.557041 , 0.417104 , 0.607803 , 0.517228 , 0.622878 , 0.61812 , 0.606489 , 0.651792 , 0.555514 , 0.595343 , 0.433913 , 0.583645 , 0.309203 , 0.442801 , 0.584224 , 0.587429 , 0.584632 , 0.3422 , 0.745689 , 0.403444 , 0.725528 , 0.466265 , 0.709891 , 0.517493 , 0.719077 , 0.56898 , 0.709561 , 0.632055 , 0.7251 , 0.691273 , 0.745059 , 0.643897 , 0.796434 , 0.590479 , 0.829602 , 0.519 , 0.841298 , 0.448096 , 0.83152 , 0.393251 , 0.79867 , 0.439201 , 0.768982 , 0.517657 , 0.780283 , 0.595575 , 0.768467 , 0.594563 , 0.750926 , 0.517517 , 0.757119 , 0.440197 , 0.751462 , 0.517666 , 0.768485 , 0.517696 , 0.530445 , 0.254136 , 0.262364 , 0.250374 , 0.316029 , 0.347053 , 0.319192 , 0.351627 , 0.271201 , 0.682001 , 0.270397 , 0.686829 , 0.318761 , 0.784411 , 0.31506 , 0.781239 , 0.262116};
//0 1 2 14 15 16这几个点索引一般不用


//需要计算特征的landmark索引，通过一下12个点的HOG特征回归出68个点的梯度变化
static int LandmarkLength1 = 12;
static int IteraLandmarkIndex1[] = {2, 5, 7, 9, 12, 22, 16, 27, 31, 65, 46, 52};
static int LandmarkLength2 = 12;
static int IteraLandmarkIndex2[] = {2, 5, 7, 9, 12, 22, 16, 27, 31, 65, 46, 52};
static int LandmarkLength3 = 12;
static int IteraLandmarkIndex3[] = {2, 5, 7, 9, 12, 22, 16, 27, 31, 65, 46, 52};
static int LandmarkLength4 = 20;
static int IteraLandmarkIndex4[] = {2, 5, 7, 9, 12, 22, 23, 17, 16, 27, 29,  33, 31, 65, 37,41, 46, 39, 52, 55};
static int LandmarkLength5 = 20;
static int IteraLandmarkIndex5[] = {2, 5, 7, 9, 12, 22, 23, 17, 16, 27, 29,  33, 31, 65, 37,41, 46, 39, 52, 55};


//四次迭代
//int LandmarkLength1 = 12;
//int IteraLandmarkIndex1[] = {3, 6, 8, 10, 13, 19, 24, 36, 45, 30, 48, 54};
//int LandmarkLength2 = 20;
//int IteraLandmarkIndex2[] = {3, 6, 8, 10, 13, 18, 20, 23, 25, 36, 39, 42, 45, 30, 31, 35, 48, 51, 54, 57};
//int LandmarkLength3 = 20;
//int IteraLandmarkIndex3[] = {3, 6, 8, 10, 13, 18, 20, 23, 25, 36, 39, 42, 45, 30, 31, 35, 48, 51, 54, 57};
//int LandmarkLength4 = 38;
//int IteraLandmarkIndex4[] = {0,2,4,6,8,10,12,14,16,17,19,21,22,24,26,27,30,31,33,35,36,37,39,40,42,43,45,46,48,50,52,54,56,58,60,62,64,66};


//左右两只眼睛的索引
static int eyes_indexs[4] = {27, 29, 33, 31};

static int extern_point_Length = 14;
static int extern_point_indexs[] = {0,16,36,37,38,39,40,41,42,43,44,45,46,47};

////5次68个点的迭代
//int LandmarkLength1 = 68;
//int IteraLandmarkIndex1[68] = {0};
//int LandmarkLength2 = 68;
//int IteraLandmarkIndex2[68] = {0};
//int LandmarkLength3 = 68;
//int IteraLandmarkIndex3[68] = {0};
//int LandmarkLength4 = 68;
//int IteraLandmarkIndex4[68] = {0};
//int LandmarkLength5 = 68;
//int IteraLandmarkIndex5[68] = {0};



//左右眼睛的四个眼角，鼻尖点，左右两个嘴角，一共七个点，估计头部姿态，2*7+1维度的数据，最小二乘拟合出9个维度的数据，即一个3*3的旋转矩阵
//矩阵大小为15*9
static float estimateHeadPoseMat[] = {  -0.258801,-0.142125,0.445513,0.101524,-0.0117096,-0.119747,-0.426367,-0.0197618,-0.143073,
                                 -0.194121,-0.210882,0.0989902,0.0822748,-0.00544055,0.0184441,-0.0628809,-0.0944775,-0.162363,
                                 0.173311,-0.205982,0.105287,0.0767408,0.0101697,0.0156599,-0.0632534,0.0774872,0.139928,
                                 0.278776,-0.109497,0.537723,0.0488799,0.00548235,0.111033,-0.471475,0.0280982,0.157491,
                                 0.0427104,-0.348899,-1.95092,0.0493076,0.0340635,0.157101,2.01808,-0.0716708,0.0860774,
                                 -0.191908,0.551951,0.456261,-0.174833,-0.0202239,-0.203346,-0.575386,0.105571,-0.171957,
                                 0.150051,0.465426,0.307133,-0.183886,-0.0123275,0.0208533,-0.4187,-0.0252474,0.0939203,
                                 0.00521464,0.229863,0.0595028,-0.480886,-0.0684972,0.43404,-0.0206778,-0.428706,0.118848,
                                 0.0125229,0.140842,0.115793,-0.239542,-0.0933311,0.0913729,-0.106839,-0.0523733,0.0697435,
                                 0.030548,-0.101407,-0.0659365,0.220726,-0.113126,0.0189044,0.0785027,-0.02235,0.0964722,
                                 0.0143054,-0.274282,-0.173696,0.477843,-0.073234,0.297015,0.180833,-0.322039,0.0855057,
                                 0.117061,-0.00704583,0.0157153,0.00142929,-0.106156,-1.29549,-0.0134561,1.22806,0.048107,
                                 -0.0663207,0.0996722,0.0374666,-0.215455,0.240434,0.233645,-0.0148478,-0.144342,-0.175324,
                                 -0.113332,-0.0876358,0.011164,0.23588,0.213911,0.2205,-0.103526,-0.258239,-0.243352,
                                 0.535077,0.000906855,-0.0336819,0.015495,0.586095,-0.14663,0.0643886,-0.114478,0.937324};







#endif
